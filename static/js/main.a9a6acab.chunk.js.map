{"version":3,"sources":["actions/actions.js","components/app-header/search.js","components/app-header/app-header.js","components/pages/contacts-page/menu.js","components/pages/contacts-page/popups/contact-data.js","components/pages/contacts-page/popups/contact-popup.js","components/pages/contacts-page/contact.js","components/pages/contacts-page/contacts-list.js","components/pages/contacts-page/popups/new-contact-popup.js","components/pages/contacts-page/contacts-page.js","services/users.js","components/pages/signin-page/signin-form.js","services/service.js","components/pages/signin-page/signin-page.js","components/app/app.js","reducers/reducer.js","stores/store.js","index.js"],"names":["onDeleteContact","id","type","SearchInput","styled","theme","position","borderRadius","shape","backgroundColor","alpha","palette","common","white","SearchIconWrapper","padding","spacing","height","pointerEvents","display","alignItems","justifyContent","StyledInputBase","InputBase","color","paddingLeft","transition","transitions","create","Search","setSearchFilter","onChange","e","target","value","placeholder","inputProps","AppHeader","dispatch","useDispatch","navigate","useNavigate","AppBar","sx","flexDirection","Typography","variant","ml","Box","Button","onClick","Avatar","m","ContactMenu","open","onClose","anchor","contact","onPopupOpen","pressEdited","Menu","anchorEl","MenuItem","ListItemIcon","fontSize","ContactData","edit","state","onEdit","onSubmit","firstName","lastName","number","useState","newFirstName","setNewFirstName","newLastName","setNewLastName","newNumber","setNewNumber","disabled","setDisabled","useEffect","match","component","gap","width","mt","TextField","required","label","size","autoFocus","fullWidth","List","alignSelf","ListItem","style","top","left","transform","bgcolor","boxShadow","p","pt","ContactPopup","onPopupClose","editedPressed","shortName","image","displayName","setEdit","editedContact","setEditedContact","Modal","disableEnforceFocus","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","IconButton","right","src","mb","onEditContact","Contact","setAnchor","menuOpen","popupOpen","setPopupOpen","setEditedPressed","button","ListItemAvatar","ListItemText","primary","secondary","edge","stopPropagation","currentTarget","ContactsList","searchFilter","contacts","length","align","filter","search","toLowerCase","includes","sort","a","b","compare","map","NewContactPopup","setFirstName","setNumber","preventDefault","data","FormData","newContact","get","name","ContactsPage","user","useSelector","Container","maxWidth","bottom","to","replace","users","login","password","picture","service","Promise","resolve","reject","find","item","setTimeout","Error","SigninForm","loginError","setLoginError","passwordError","setPasswordError","setLogin","setPassword","onLogin","then","result","catch","noValidate","margin","autoComplete","error","SigninPage","marginTop","App","path","element","initialState","uniqueId","onLogout","onAddContact","newContacts","idx","findIndex","slice","persistedState","localStorage","getItem","JSON","parse","undefined","store","createStore","action","subscribe","setItem","stringify","getState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a9a6acab.chunk.js","sourcesContent":["const onLogin = (user) => {\n    return {\n        type: 'ON_LOGIN',\n        user: user\n    };\n};\n\nconst onLogout = () => {\n    return {\n        type: 'ON_LOGOUT'\n    };\n};\n\nconst onAddContact = (contact) => {\n    return {\n        type: 'ON_ADD_CONTACT',\n        contact: contact\n    };\n};\n\nconst onEditContact = (contact, id) => {\n    return {\n        type: 'ON_EDIT_CONTACT',\n        contact: contact,\n        id: id\n    };\n};\n\nconst onDeleteContact = (id) => {\n    return {\n        type: 'ON_DELETE_CONTACT',\n        id: id\n    };\n};\n\nexport {\n    onLogout,\n    onLogin,\n    onAddContact,\n    onEditContact,\n    onDeleteContact\n};","import SearchIcon from '@mui/icons-material/Search';\nimport { InputBase } from '@mui/material';\nimport { styled, alpha } from '@mui/material/styles';\n\nconst SearchInput = styled('div')(({ theme }) => ({\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: alpha(theme.palette.common.white, 0.15),\n    '&:hover': {\n        backgroundColor: alpha(theme.palette.common.white, 0.25),\n    }\n}));\n\nconst SearchIconWrapper = styled('div')(({ theme }) => ({\n    padding: theme.spacing(0, 2),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center'\n}));\n\nconst StyledInputBase = styled(InputBase)(({ theme }) => ({\n    color: 'inherit',\n    '& .MuiInputBase-input': {\n        padding: theme.spacing(1, 1, 1, 0),\n        paddingLeft: `calc(1em + ${theme.spacing(4)})`,\n        transition: theme.transitions.create('width')\n    },\n}));\n\nexport const Search = ({ setSearchFilter }) => {\n\n    const onChange = (e) => {\n        setSearchFilter(e.target.value);\n    }\n\n    return (\n        <SearchInput>\n            <SearchIconWrapper>\n                <SearchIcon />\n            </SearchIconWrapper>\n            <StyledInputBase\n                onChange={onChange}\n                placeholder=\"Search…\"\n                inputProps={{ 'aria-label': 'search' }}\n            />\n        </SearchInput>\n    )\n}","import {\n    Box,\n    AppBar,\n    Typography,\n    Button,\n    Avatar\n} from '@mui/material';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router';\nimport { onLogout } from '../../actions/actions';\nimport { Search } from './search';\n\nexport const AppHeader = ({ setSearchFilter }) => {\n\n    const dispatch = useDispatch();\n    const navigate = useNavigate();\n\n    const onClick = () => {\n        dispatch(onLogout());\n        navigate('/');\n    };\n\n    return (\n        <AppBar\n            position='sticky'\n            sx={{\n                flexDirection: 'row',\n                alignItems: 'center',\n                justifyContent: 'space-between'\n            }}\n        >\n            <Typography\n                variant=\"subtitle1\"\n                sx={{ ml: 3 }}\n            >\n                Контакты\n            </Typography>\n            <Search setSearchFilter={setSearchFilter} />\n            <Box sx={{\n                display: 'flex',\n                alignItems: 'center'\n            }}>\n                <Button\n                    color=\"inherit\"\n                    onClick={onClick}\n                >\n                    выйти\n                </Button>\n                <Avatar sx={{ m: 2, ml: 1 }} />\n            </Box>\n        </AppBar>\n    );\n};","import {\n    Menu,\n    MenuItem,\n    ListItemIcon\n} from \"@mui/material\";\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport EditIcon from '@mui/icons-material/Edit';\nimport { onDeleteContact } from \"../../../actions/actions\";\nimport { useDispatch } from \"react-redux\";\n\nexport const ContactMenu = ({ open, onClose, anchor, contact, onPopupOpen, pressEdited }) => {\n\n    const { id } = contact;\n\n    const dispatch = useDispatch();\n\n    const onDelete = () => {\n        dispatch(onDeleteContact(id));\n        onClose();\n    };\n\n    const onEdit = () => {\n        onPopupOpen();\n        pressEdited();\n        onClose();\n    }\n\n    return (\n            <Menu\n                anchorEl={anchor}\n                open={open}\n                onClose={onClose}\n                onClick={onClose}\n            >\n                <MenuItem\n                    onClick={onEdit}\n                >\n                    <ListItemIcon>\n                        <EditIcon fontSize='small' />\n                    </ListItemIcon>\n                    Изменить\n                </MenuItem>\n                <MenuItem\n                    onClick={onDelete}\n                >\n                    <ListItemIcon>\n                        <DeleteIcon fontSize='small' />\n                    </ListItemIcon>\n                    Удалить\n                </MenuItem>\n            </Menu>        \n    );\n};","import {\n    List,\n    ListItem,\n    Typography,\n    TextField,\n    Button,\n    Box\n} from \"@mui/material\";\nimport { useEffect, useState } from \"react\";\n\nexport const ContactData = ({ contact, edit, state, onEdit, onSubmit }) => {\n\n    const { firstName, lastName, number } = contact;\n\n    const [newFirstName, setNewFirstName] = useState(firstName);\n    const [newLastName, setNewLastName] = useState(lastName);\n    const [newNumber, setNewNumber] = useState(number);\n\n    const [disabled, setDisabled] = useState(false);\n\n    useEffect(() => {\n\n        const rgxNum = /^[+]*[(]{0,1}[0-9]{1,4}[)]{0,1}[-\\s./0-9]*$/;\n\n        if (\n            newFirstName === ''\n            || newNumber === ''\n            || !newNumber.match(rgxNum)\n        ) {\n            setDisabled(true);\n        } else {\n            setDisabled(false);\n        }\n    }, [newFirstName, newNumber])\n\n    const onFirstNameChange = (e) => {\n\n        setNewFirstName(e.target.value);\n\n        onEdit({\n            ...state,\n            firstName: e.target.value\n        });\n    };\n\n    const onLastNameChange = (e) => {\n\n        setNewLastName(e.target.value);\n\n        onEdit({\n            ...state,\n            lastName: e.target.value\n        });\n    };\n\n    const onNumberChange = (e) => {\n\n        setNewNumber(e.target.value);\n\n        onEdit({\n            ...state,\n            number: e.target.value\n        });\n    };\n\n    if (edit) {\n        return (\n            <Box\n                component=\"form\"\n                onSubmit={onSubmit}\n                sx={{\n                    display: 'flex',\n                    flexDirection: 'column',\n                    gap: 2.2,\n                    width: '90%',\n                    mt: 2,\n                }}\n            >\n                <TextField\n                    required\n                    label=\"Имя\"\n                    variant=\"standard\"\n                    value={newFirstName}\n                    onChange={onFirstNameChange}\n                    size='small'\n                    autoFocus\n                />\n                <TextField\n                    label=\"Фамилия\"\n                    variant=\"standard\"\n                    size='small'\n                    value={newLastName}\n                    onChange={onLastNameChange}\n                />\n                <TextField\n                    required\n                    label=\"Номер\"\n                    variant=\"standard\"\n                    size='small'\n                    value={newNumber}\n                    onChange={onNumberChange}\n                />\n                <Button\n                    sx={{ mt: 3 }}\n                    fullWidth\n                    size='large'\n                    type='submit'\n                    disabled={disabled}\n                >\n                    Сохранить\n                </Button>\n            </Box>\n        )\n    }\n    return (\n        <List sx={{\n            display: 'flex',\n            flexDirection: 'column',\n            alignSelf: 'flex-start',\n            gap: 1.5,\n            mt: 2,\n        }}>\n            <ListItem>\n                <Typography color='#9e9e9e'>\n                    Имя:\n                </Typography>\n                <Typography sx={{ ml: 1 }}>\n                    {firstName}\n                </Typography>\n            </ListItem>\n            {lastName ? (\n                <ListItem>\n                    <Typography color='#9e9e9e'>\n                        Фамилия:\n                    </Typography>\n                    <Typography sx={{ ml: 1 }}>\n                        {lastName}\n                    </Typography>\n                </ListItem>\n            ) : null}\n            <ListItem>\n                <Typography color='#9e9e9e'>\n                    Номер:\n                </Typography>\n                <Typography sx={{ ml: 1 }}>\n                    {number}\n                </Typography>\n            </ListItem>\n        </List>\n    );\n};","import {\n    Avatar,\n    Modal,\n    Fade,\n    Box,\n    Backdrop,\n    Typography,\n    Button,\n    IconButton\n} from '@mui/material';\nimport { ContactData } from './contact-data';\nimport { useDispatch } from \"react-redux\";\nimport { onDeleteContact, onEditContact } from '../../../../actions/actions';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { useState } from 'react';\n\nconst style = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: 400,\n    bgcolor: 'background.paper',\n    boxShadow: 16,\n    p: 4,\n    pt: 6,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n};\n\nexport const ContactPopup = ({ open, onPopupClose, contact, editedPressed }) => {\n\n    const dispatch = useDispatch();\n\n    const { firstName, lastName, shortName, image, id } = contact;\n\n    const displayName = lastName ? `${firstName} ${lastName}` : firstName;\n\n    const [edit, setEdit] = useState(editedPressed);\n\n    const onEdit = () => {\n        setEdit(true);\n    };\n\n    const [editedContact, setEditedContact] = useState({ ...contact });\n\n    const onSave = () => {\n        setEdit(false);\n        dispatch(onEditContact(editedContact, id));\n    };\n\n    const onClose = () => {\n        onPopupClose();\n        setEdit(false);\n    };\n\n    const onDelete = () => {\n        onClose();\n        dispatch(onDeleteContact(id));\n    };\n\n    return (\n        <Modal\n            disableEnforceFocus\n            aria-labelledby='contact'\n            open={open}\n            onClose={onClose}\n            closeAfterTransition\n            BackdropComponent={Backdrop}\n            BackdropProps={{\n                timeout: 500,\n            }}\n        >\n            <Fade in={open}>\n                <Box sx={style}>\n                    <IconButton\n                        aria-label=\"Добавить контакт\"\n                        size='large'\n                        color='primary'\n                        sx={{\n                            position: 'absolute',\n                            right: '8px',\n                            top: '8px'\n                        }}\n                        onClick={onClose}\n                    >\n                        <CloseIcon />\n                    </IconButton>\n                    <Avatar\n                        src={image}\n                        size='large'\n                        sx={{\n                            width: 64,\n                            height: 64,\n                            mb: 2\n                        }}\n                    >\n                        {image ? '' : shortName}\n                    </Avatar>\n                    <Typography variant=\"h6\" component=\"h2\">\n                        {displayName}\n                    </Typography>\n                    <ContactData\n                        contact={contact}\n                        edit={edit}\n                        onEdit={setEditedContact}\n                        state={editedContact}\n                        onSubmit={onSave}\n                    />\n                    {\n                        !edit ?\n                            <Button\n                                sx={{ mt: 2 }}\n                                fullWidth\n                                size='large'\n                                onClick={onEdit}\n                            >\n                                Изменить\n                            </Button>\n                            : null\n                    }\n                    <Button\n                        size='large'\n                        onClick={onDelete}\n                        fullWidth\n                    >\n                        Удалить\n                    </Button>\n\n                </Box>\n            </Fade>\n        </Modal>\n    );\n};","import {\n    Avatar,\n    IconButton,\n    ListItem,\n    ListItemAvatar,\n    ListItemText,\n} from \"@mui/material\";\nimport MoreIcon from '@mui/icons-material/MoreHoriz';\nimport { ContactMenu } from \"./menu\";\nimport { Fragment, useState } from \"react\";\nimport { ContactPopup } from \"./popups/contact-popup\";\n\nexport const Contact = ({ contact }) => {\n\n    const { firstName, lastName, number, shortName, image, id } = contact;\n\n    const displayName = lastName ? `${firstName} ${lastName}` : firstName;\n\n    const [anchor, setAnchor] = useState(null);\n    const menuOpen = anchor ? true : false;\n\n    const onMenuOpen = (e) => {\n        e.stopPropagation();\n        setAnchor(e.currentTarget);\n    };\n\n    const onMenuClose = (e) => {\n        if (e) e.stopPropagation();\n        setAnchor(null);\n    };\n\n    const [popupOpen, setPopupOpen] = useState(false);\n    const [editedPressed, setEditedPressed] = useState(false);\n\n    const onPopupOpen = () => {\n        setPopupOpen(true);\n    };\n\n    const onPopupClose = () => {\n        setPopupOpen(false);\n        setEditedPressed(false);\n    };\n\n    return (\n        <Fragment>\n            <ContactPopup\n                open={popupOpen}\n                onPopupClose={onPopupClose}\n                contact={contact}\n                editedPressed={editedPressed}\n            />\n            <ListItem\n                key={id}\n                button\n                onClick={onPopupOpen}\n            >\n            {/* <Box\n            sx={{\n            display: 'flex',\n            alignItems: 'center',\n            width: '100%',\n            p: 2\n        }} */}\n        \n            <ListItemAvatar>\n            <Avatar src={image}>\n        {image?'': shortName}\n            </Avatar>\n            </ListItemAvatar>\n            <ListItemText primary={displayName} secondary={number} />\n            <IconButton\n            edge=\"end\"\n            aria-label=\"Меню\"\n            onClick={onMenuOpen}\n            >\n            <MoreIcon />\n            </IconButton>\n            <ContactMenu\n            open={menuOpen}\n            onClose={onMenuClose}\n            anchor={anchor}\n            contact={contact}\n            onPopupOpen={onPopupOpen}\n            pressEdited={() => setEditedPressed(true)}\n            />\n            </ ListItem>\n        </Fragment>\n    );\n};","import { List, Typography } from '@mui/material';\nimport { Contact } from './contact';\n\nexport const ContactsList = ({ searchFilter, contacts }) => {\n\n    if (contacts.length === 0) {\n        return (\n            <Typography\n                variant=\"subtitle1\"\n                align='center'\n                sx={{ mt: 2 }}\n            >\n                Добавь свой первый контакт!\n            </Typography>\n        );\n    }\n\n    if (\n        contacts\n            .filter((contact) => {\n\n                const { firstName, number } = contact;\n                const lastName = contact.lastName ? contact.lastName : '';\n                const search = searchFilter.toLowerCase();\n\n                return (\n                    firstName.toLowerCase().includes(search)\n                    || number.toLowerCase().includes(search)\n                    || lastName.toLowerCase().includes(search)\n                );\n            })\n            .length === 0\n        && contacts.length > 0\n    ) return (\n        <Typography\n            variant=\"subtitle1\"\n            align='center'\n        >\n            Контакт не найден\n        </Typography>\n    );\n\n    return (\n        <List>\n            {\n                contacts\n                    .filter((contact) => {\n\n                        const { firstName, number } = contact;\n                        const lastName = contact.lastName ? contact.lastName : '';\n                        const search = searchFilter.toLowerCase();\n\n                        return (\n                            firstName.toLowerCase().includes(search)\n                            || number.toLowerCase().includes(search)\n                            || lastName.toLowerCase().includes(search)\n                        );\n                    })\n                    .sort((a, b) => compare(a.firstName, b.firstName))\n                    .map((contact) => {\n                        return <Contact key={contact.id} contact={contact} />;\n                    })\n            }\n        </List>\n    );\n};\n\nconst compare = (a, b) => {\n    if (a > b) return 1;\n    if (a === b) return 0;\n    if (a < b) return -1;\n  }\n","import {\n    Avatar,\n    Modal,\n    Fade,\n    Box,\n    Backdrop,\n    Typography,\n    Button,\n    IconButton,\n    TextField\n} from '@mui/material';\nimport { useDispatch } from \"react-redux\";\nimport { onAddContact } from '../../../../actions/actions';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { useState, useEffect } from 'react';\n\nconst style = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n    width: 400,\n    bgcolor: 'background.paper',\n    boxShadow: 16,\n    p: 4,\n    pt: 6,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n};\n\nexport const NewContactPopup = ({ open, onClose }) => {\n\n    const dispatch = useDispatch();\n\n    const [firstName, setFirstName] = useState('');\n    const [number, setNumber] = useState('');\n\n    const [disabled, setDisabled] = useState(false);\n\n    useEffect(() => {\n\n        const rgxNum = /^[+]*[(]{0,1}[0-9]{1,4}[)]{0,1}[-\\s./0-9]*$/;\n\n        if (\n            firstName === ''\n            || number === ''\n            || !number.match(rgxNum)\n        ) {\n            setDisabled(true);\n        } else {\n            setDisabled(false);\n        }\n    }, [firstName, number])\n\n    const onSubmit = (e) => {\n\n        e.preventDefault();\n\n        const data = new FormData(e.currentTarget);\n\n        const newContact = {\n            firstName: data.get('firstName'),\n            lastName: data.get('lastName'),\n            number: data.get('number')\n        }\n        dispatch(onAddContact(newContact));\n\n        onClose();\n    };\n\n    return (\n        <Modal\n            disableEnforceFocus\n            aria-labelledby='contact'\n            open={open}\n            onClose={onClose}\n            closeAfterTransition\n            BackdropComponent={Backdrop}\n            BackdropProps={{\n                timeout: 500,\n            }}\n        >\n            <Fade in={open}>\n                <Box sx={style}>\n                    <IconButton\n                        aria-label=\"Добавить контакт\"\n                        size='large'\n                        color='primary'\n                        sx={{\n                            position: 'absolute',\n                            right: '8px',\n                            top: '8px'\n                        }}\n                        onClick={onClose}\n                    >\n                        <CloseIcon />\n                    </IconButton>\n                    <Avatar\n                        size='large'\n                        sx={{\n                            width: 64,\n                            height: 64,\n                            mb: 2\n                        }}\n                    />\n                    <Typography variant=\"h6\" component=\"h2\">\n                        Новый контакт\n                    </Typography>\n                    <Box\n                        component=\"form\"\n                        onSubmit={onSubmit}\n                        sx={{\n                            display: 'flex',\n                            flexDirection: 'column',\n                            gap: 2.2,\n                            width: '90%',\n                            mt: 3,\n                        }}\n                    >\n                        <TextField\n                            required\n                            label=\"Имя\"\n                            id='firstName'\n                            name='firstName'\n                            variant=\"standard\"\n                            size='small'\n                            onChange={e => setFirstName(e.target.value)}\n                            autoFocus\n                        />\n                        <TextField\n                            id='lastName'\n                            name='lastName'\n                            label=\"Фамилия\"\n                            variant=\"standard\"\n                            size='small'\n                        />\n                        <TextField\n                            required\n                            id='number'\n                            name='number'\n                            label=\"Номер\"\n                            variant=\"standard\"\n                            size='small'\n                            onChange={e => setNumber(e.target.value)}\n                        />\n                        <Button\n                            sx={{ mt: 3 }}\n                            fullWidth\n                            size='large'\n                            type='submit'\n                            disabled={disabled}\n                        >\n                            Добавить\n                        </Button>\n                    </Box>\n                    <Button\n                        size='large'\n                        onClick={onClose}\n                        fullWidth\n                    >\n                        Отменить\n                    </Button>\n\n                </Box>\n            </Fade>\n        </Modal>\n    );\n};","import {\n    IconButton,\n    Container,\n} from '@mui/material';\nimport { Fragment, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Navigate } from 'react-router';\nimport { AppHeader } from '../../app-header/app-header';\nimport AddIcon from '@mui/icons-material/Add';\nimport { ContactsList } from './contacts-list';\nimport { NewContactPopup } from './popups/new-contact-popup';\n\nexport const ContactsPage = () => {\n\n    const user = useSelector((state) => state.user);\n\n    const [searchFilter, setSearchFilter] = useState('');\n\n    const [popupOpen, setPopupOpen] = useState(false);\n\n    const onPopupClose = () => {\n        setPopupOpen(false);\n    };\n\n    const onAdd = () => {\n        setPopupOpen(true);\n    };\n\n    if (user) {\n        return (\n            <Fragment>\n                <NewContactPopup\n                    open={popupOpen}\n                    onClose={onPopupClose}\n                />\n                <AppHeader setSearchFilter={setSearchFilter} />\n                <Container maxWidth=\"sm\" sx={{ pt: 3 }} >\n                    <ContactsList\n                        searchFilter={searchFilter}\n                        contacts={user.contacts}\n                    />\n                    <IconButton\n                        aria-label=\"Добавить контакт\"\n                        size='large'\n                        color='primary'\n                        sx={{\n                            position: 'fixed',\n                            right: '32px',\n                            bottom: '32px'\n                        }}\n                        onClick={onAdd}\n                    >\n                        <AddIcon sx={{ fontSize: 32 }} />\n                    </IconButton>\n                </Container>\n            </Fragment >\n        );\n    }\n\n    return <Navigate to='/' replace={true} />\n};","export const users = [\n    {\n        login: 'user',\n        password: 'password',\n        contacts: [\n            {\n                id: 0,\n                firstName: 'Алена',\n                lastName: 'Петрова',\n                shortName: 'А',\n                number: '+79211234567',\n                picture: null\n            },\n            {\n                id: 1,\n                firstName: 'Дмитрий',\n                lastName: 'Иванов',\n                shortName: 'Д',\n                number: '+79991234567',\n                picture: null\n            },\n            {\n                id: 2,\n                firstName: 'Мама',\n                lastName: '',\n                shortName: 'М',\n                number: '+79091234567',\n                picture: null\n            }\n        ]\n    }\n];","import {\n    Button,\n    TextField\n} from '@mui/material';\nimport { Box } from '@mui/system';\nimport { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router';\nimport { onLogin } from '../../../actions/actions';\nimport Service from '../../../services/service';\n\nconst service = new Service();\n\nexport const SigninForm = () => {\n\n    const dispatch = useDispatch();\n\n    const navigate = useNavigate();\n\n    const onSubmit = (e) => {\n\n        e.preventDefault();\n\n        const data = new FormData(e.currentTarget);\n\n        service.onLogin(\n            data.get('login'),\n            data.get('password')\n        )\n            .then((result) => {\n                dispatch(onLogin(result));\n                navigate('/contacts');\n            })\n            .catch(() => {\n                setLoginError(true);\n                setPasswordError(true);\n                setPassword('');\n            });\n    };\n\n    const [disabled, setDisabled] = useState(true);\n    const [loginError, setLoginError] = useState(false);\n    const [passwordError, setPasswordError] = useState(false);\n    const [login, setLogin] = useState('');\n    const [password, setPassword] = useState('');\n\n    const onLoginChange = (e) => {\n        setLogin(e.target.value);\n    };\n\n    const onPasswordChange = (e) => {\n        setPassword(e.target.value);\n    };\n\n    useEffect(() => {\n        if (\n            login === ''\n            || password === ''\n        ) {\n            setDisabled(true);\n        } else {\n            setDisabled(false);\n        }\n\n        if (password !== '') {\n            setLoginError(false);\n            setPasswordError(false);\n        }\n\n    }, [login, password])\n\n    return (\n        <Box component=\"form\" onSubmit={onSubmit} noValidate sx={{ mt: 1 }}>\n            <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                id=\"login\"\n                label=\"Логин\"\n                name=\"login\"\n                autoComplete=\"login\"\n                autoFocus\n                error={loginError}\n                onChange={onLoginChange}\n            />\n            <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Пароль\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n                error={passwordError}\n                onChange={onPasswordChange}\n                value={password}\n            />\n            <Button\n                type=\"submit\"\n                fullWidth\n                disabled={disabled}\n                variant=\"contained\"\n                sx={{ mt: 3, mb: 2 }}\n            >\n                войти\n            </Button>\n        </Box>\n    );\n};","import { users } from './users';\n\nexport default class Service {\n\n    onLogin(login, password) {\n\n        return new Promise((resolve, reject) => {\n            \n            const user = users.find((item) => {\n                return (\n                    item.login.toLowerCase() === login.toLowerCase()\n                    && item.password === password\n                );\n            });\n\n            setTimeout(() => {\n                if (user) {\n                    resolve(user);\n                } else {\n                    reject(new Error('Такого пользователя не существует'));\n                }\n\n            }, 100);\n\n        });\n    };\n};","import {\n    Avatar,\n    Container,\n    Typography\n} from '@mui/material';\nimport { Box } from '@mui/system';\nimport { SigninForm } from './signin-form';\n\nexport const SigninPage = () => {\n    return (\n        <Container maxWidth=\"xs\">\n            <Box\n                sx={{\n                    marginTop: 8,\n                    display: 'flex',\n                    flexDirection: 'column',\n                    alignItems: 'center',\n                }}\n            >\n                <Avatar sx={{ m: 2 }} />\n                <Typography component=\"h1\" variant=\"h5\">\n                    Вход в личный кабинет\n                </Typography>\n                <SigninForm />\n            </Box>\n        </Container>\n    );\n}","import { Route, Routes } from 'react-router';\nimport { ContactsPage } from '../pages/contacts-page/contacts-page';\nimport { SigninPage } from '../pages/signin-page/signin-page';\n\nexport const App = () => {\n    return (\n        <Routes>\n            <Route\n                path='/'\n                element={<SigninPage />} />\n            <Route\n                path='/contacts'\n                element={<ContactsPage />} />\n        </Routes>\n    );\n};","const initialState = {\n    user: null,\n    uniqueId: 3\n};\n\nexport const reducer = (state = initialState, action) => {\n    \n    switch (action.type) {\n        case 'ON_LOGIN':\n            return onLogin(action.user, state);\n        case 'ON_LOGOUT':\n            return onLogout(state);\n        case 'ON_ADD_CONTACT':\n            return onAddContact(action.contact, state);\n        case 'ON_EDIT_CONTACT':\n            return onEditContact(action.contact, action.id, state);\n        case 'ON_DELETE_CONTACT':\n            return onDeleteContact(action.id, state);\n        default:\n            return state;\n    }\n};\n\nconst onLogin = (user, state) => {\n    return {\n        ...state,\n        user: user,\n    };\n};\n\nconst onLogout = (state) => {\n    return {\n        ...state,\n        user: null\n    };\n};\n\nconst onAddContact = (contact, state) => {\n\n    let { user, uniqueId } = state;\n    const { contacts } = user;\n    const { firstName, lastName, number } = contact;\n\n    const newContact = {\n        id: uniqueId,\n        firstName: firstName,\n        lastName: lastName,\n        shortName: firstName[0],\n        number: number\n    }\n    \n    const newContacts = [\n        ...contacts,\n        newContact\n    ];\n\n    return {\n        ...state,\n        uniqueId: uniqueId++,\n        user: {\n            ...user,\n            contacts: newContacts\n        }\n    };\n};\n\nconst onEditContact = (contact, id, state) => {\n\n    const { user } = state;\n    const { contacts } = user;\n\n    const  idx = contacts.findIndex((item) => {\n        return id === item.id;\n    });\n\n    const newContacts = [\n        ...contacts.slice(0, idx),\n        contact,\n        ...contacts.slice(idx + 1)\n    ];\n\n    return {\n        ...state,\n        user: {\n            ...user,\n            contacts: newContacts\n        }\n    };\n};\n\nconst onDeleteContact = (id, state) => {\n\n    const { user } = state;\n    const { contacts } = user;\n\n    const  idx = contacts.findIndex((item) => {\n        return id === item.id;\n    });\n\n    const newContacts = [\n        ...contacts.slice(0, idx),\n        ...contacts.slice(idx + 1)\n    ];\n\n    return {\n        ...state,\n        user: {\n            ...user,\n            contacts: newContacts\n        }\n    };    \n};","import { createStore } from \"redux\";\nimport { reducer } from \"../reducers/reducer\";\n\nconst persistedState = localStorage.getItem('contactsSPA')\n    ? JSON.parse(localStorage.getItem('contactsSPA'))\n    : undefined;\n\nexport const store = createStore(reducer, persistedState);\n\nstore.subscribe(() => {\n    localStorage.setItem('contactsSPA', JSON.stringify(store.getState()))\n});","import { StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter as Router } from 'react-router-dom';\nimport { App } from './components/app/app';\nimport { Provider } from 'react-redux';\nimport { store } from './stores/store';\nimport './index.scss';\n\nReactDOM.render(\n  <StrictMode>\n    <Provider store={store}>\n      <Router>\n        <App />\n      </Router>\n    </Provider>\n  </StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}